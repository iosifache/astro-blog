---
import PageLayout from "@/layouts/Base";
import BlogPostPreview from "@/components/BlogPostPreview";
import Pagination from "@/components/Paginator";
import { getAllTags, sortMDByDate } from "src/util";
import type { Post, Page, MDXInstance } from "@/types";

export async function getStaticPaths({ paginate }) {
	const allPosts = await Astro.glob<Post>("./*.mdx");
	const allPostsByDate = sortMDByDate(allPosts);
	const allTags = getAllTags(allPosts);
	return paginate(allPostsByDate, { props: { allTags }, pageSize: 10 });
}

export interface Props {
	page: Page<MDXInstance<Post>>;
	allTags: string[];
}

const { page, allTags } = Astro.props as Props;

const meta = {
	title: "Posts",
	description: "A collection of posts by me for a starter Astro theme",
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			url: page.url.prev,
			text: `← Previous Posts`,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			url: page.url.next,
			text: `Next Posts →`,
		},
	}),
};
---

<PageLayout meta={meta}>
	<div class="space-y-6">
		<h1 class="mb-6 title">Posts</h1>
		<div class="grid gap-y-16">
			<section aria-label="Blog post list">
				<ul class="text-left space-y-8">
					{
						page.data.map((p) => (
							<li class="[&_q]:w-full flex flex-wrap items-center gap-x-2">
								<BlogPostPreview post={p} as="h2" withDesc />
							</li>
						))
					}
				</ul>
				<Pagination {...paginationProps} />
			</section>
		</div>
		{
			allTags.length && (
				<aside>
					<h1 class="title mb-6">Tags</h1>
					<ul class="text-bgColor flex flex-wrap gap-2">
						{allTags.map((tag) => (
							<li>
								<a
									class="bg-accent flex items-center justify-center rounded-lg p-1"
									href={`/tags/${tag}`}
									aria-label={`View all posts with the tag: ${tag}`}
								>
									{tag}
								</a>
							</li>
						))}
					</ul>
					<span class="mt-4 block sm:text-right">
						<a
							class="sm:hover:text-accent"
							href="/tags"
							aria-label="View all blog categories"
						>
							View all →
						</a>
					</span>
				</aside>
			)
		}
	</div>
</PageLayout>
